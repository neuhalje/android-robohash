/*
 * Everything related to publishing the aar to maven and bintray. 
 * (jcenter: https://bintray.com/neuhalje/maven/robohash/view)
 */

def siteUrl = 'https://github.com/neuhalje/android-robohash'
def gitUrl = 'https://github.com/neuhalje/android-robohash.git'

group = "name.neuhalfen.projects.android"
version = "1.0.3"


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                
                // Add your description here
                name 'Cute litte robots for your android apps!'
                url siteUrl
                
                // Set your license
                licenses {
                    license {
                        name 'MIT License, Version 2.0'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'neuhalje'
                        name 'Jens Neuhalfen'
                        email 'oss@neuhalfen.name'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}


Properties properties = new Properties()

def propFile = project.rootProject.file('local.properties')
if (propFile.exists()) {
   properties.load(propFile.newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "robohash"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
